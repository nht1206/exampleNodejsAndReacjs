{"version":3,"sources":["components/HomeTopMenu.js","components/Note.js","components/EditForm.js","components/Home.js","App.js","serviceWorker.js","store.js","index.js"],"names":["HomeTopMenu","_this","this","react_default","a","createElement","className","style","backgroundColor","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","onClick","props","changeEditStatus","Component","connect","state","ownProps","dispatch","Note","isEditClick","_this$props","getEditObject","editObject","isDeleteClick","_id","deleteNote","_this2","role","data-parent","title","aria-labelledby","content","noteID","EditForm","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","isChange","e","name","target","value","setState","defineProperty","isClick","editNote","addNote","htmlFor","defaultValue","onChange","aria-describedby","placeholder","notes","note","newNote","noteEdited","Home","renderEditForm","editStatus","components_EditForm","bind","assertThisInitialized","aria-multiselectable","map","key","components_Note","App","getData","axios","post","then","res","data","getNotes","components_HomeTopMenu","components_Home","Boolean","window","location","hostname","match","redux","require","mInitialState","updateNote","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","abrupt","put","stop","_x","apply","arguments","_ref2","_callee2","_context2","_x2","mStore","createStore","length","undefined","action","objectSpread","toConsumableArray","concat","updateNotes","push","newNotes","subscribe","console","log","getState","ReactDOM","render","es","store","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.15274425.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass HomeTopMenu extends Component {\n    render() {\n        return (\n            <div>\n                <nav className=\"navbar navbar-expand-sm navbar-light mb-4\" style={{ backgroundColor: '#e3f2fd' }}>\n                    <a className=\"navbar-brand\" href=\"/\">My Notes</a>\n                    <button className=\"navbar-toggler d-lg-none\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavId\" aria-controls=\"collapsibleNavId\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" />\n                    <div className=\"collapse navbar-collapse justify-content-end\" id=\"collapsibleNavId\">\n                        <ul className=\"navbar-nav mt-2 mt-lg-0\">\n                            <li className=\"nav-item active\">\n                                <a className=\"nav-link\" href=\"/\">Home <span className=\"sr-only\">(current)</span></a>\n                            </li>\n                            <li className=\"nav-item\">\n                                <a onClick={() => this.props.changeEditStatus()} className=\"nav-link\" >Add New Note</a>\n                            </li>\n                        </ul>\n                    </div>\n                </nav>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state, ownProps) => {\n}\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        changeEditStatus: () => {\n            dispatch({type: 'CHANGE_EDIT_STATUS'});\n        }\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeTopMenu);","import React, { Component } from 'react';\n//import axios from 'axios';\nimport { connect } from 'react-redux';\n\nclass Note extends Component {\n    isEditClick = () => {\n        const { changeEditStatus, getEditObject } = this.props;\n        const { editObject } = this.props;\n        changeEditStatus();\n        getEditObject(editObject);\n    }\n    isDeleteClick = () => {\n        const id = this.props._id;\n        const { deleteNote } = this.props;\n        deleteNote(id);\n    }\n    render() {\n        return (\n            <div>\n                <div className=\"card\">\n                    <div className=\"card-header\" role=\"tab\" id={\"note\" + this.props.id}>\n                        <h5 className=\"mb-0\">\n                            <a data-toggle=\"collapse\" data-parent=\"#noteList\" href={\"#note\"+ this.props.id+\"content\"} aria-expanded=\"true\" aria-controls={\"note\" + this.props.id}>\n                                {this.props.title}\n                            </a>\n                        </h5>\n                        <i onClick={() => this.isDeleteClick()} className=\"fas fa-trash-alt\"></i>\n                        <i onClick={() => this.isEditClick()} className=\"fas fa-edit\"></i>\n                    </div>\n                    <div id={\"note\"+ this.props.id+\"content\"} className=\"collapse in\" role=\"tabpanel\" aria-labelledby={\"note\" + this.props.id}>\n                        <div className=\"card-body\">\n                            {this.props.content}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        \n    }\n}\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        changeEditStatus: () => {\n            dispatch({type: 'CHANGE_EDIT_STATUS'});\n        },\n        getEditObject: (editObject) => {\n            dispatch({type: 'GET_EDIT_OBJECT', editObject});\n        },\n        deleteNote: (noteID) => {\n            dispatch({type: 'DELETE_NOTE', noteID});\n        }\n    }\n}\nexport default connect(mapStateToProps ,mapDispatchToProps)(Note);\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\n//import axios from 'axios';\n\n\nclass EditForm extends Component {\n    constructor(props){\n        super(props)\n        this.state = this.props.editObject;\n    }\n    isChange = (e) => {\n        let name = e.target.name;\n        let value = e.target.value;\n        this.setState({\n            [name]: value\n        })\n    }\n    isClick = () => {\n        const { changeEditStatus } = this.props;\n        if (this.state._id){\n            this.props.editNote(this.state);\n            changeEditStatus();\n        } else {\n            this.props.addNote(this.state);\n            changeEditStatus();\n        }\n    }\n    render() {\n        const { editObject } = this.props;\n        return (\n            <div className=\"col-4\">\n                <h3>Sữa nội dung note</h3>\n                <form>\n                <div className=\"form-group\">\n                    <label htmlFor=\"title\">Tiêu đề note</label>\n                    <input defaultValue={editObject.title} type=\"text\" onChange={(e) => this.isChange(e)} className=\"form-control\" name=\"title\" id=\"title\" aria-describedby=\"noteTitle\" placeholder=\"Tiêu đề note\" />\n                    <small id=\"noteTitle\" className=\"form-text text-muted\">Nhập tiêu đề vào đây</small>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"content\">Nội dung note</label>\n                    <textarea defaultValue={editObject.content} type=\"text\" onChange={(e) => this.isChange(e)} className=\"form-control\" name=\"content\" id=\"content\" aria-describedby=\"noteContent\" placeholder=\"Nội dung note\"/>\n                    <small id=\"noteContent\" className=\"form-text text-muted\">Nhập nội dung vào đây</small>\n                </div>\n                <input type=\"reset\" onClick={() => this.isClick()} className=\"btn btn-primary btn-block\" value=\"Save\" />\n                </form>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        notes: state.notes,\n        editObject: state.editObject\n    }\n}\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        addNote: (note) => {\n            dispatch({type: \"ADD_NEW\", newNote: note})\n        },\n        editNote: (note) => {\n            dispatch({type: \"UPDATE_EDIT_OBJECT\", noteEdited: note})\n        },\n        changeEditStatus: () => {\n            dispatch({type: 'CHANGE_EDIT_STATUS'});\n        },\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(EditForm);","import React, { Component } from 'react';\nimport Note from './Note';\nimport EditForm from './EditForm';\n//import mStore from '../store';\nimport { connect } from 'react-redux';\n\nclass Home extends Component {\n    constructor(props){\n        super(props)\n        this.renderEditForm = this.renderEditForm.bind(this);\n    }\n    renderEditForm = () => {\n        const { editStatus } = this.props;\n        if (editStatus){\n            return <EditForm></EditForm>\n        }\n    }     \n    render() {\n        var { notes } = this.props;\n        return (\n            <div>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div id=\"noteList\" role=\"tablist\" aria-multiselectable=\"true\">\n                            {\n                                notes.map((value, key) => {\n                                    return <Note key={key} editObject={value} id={key} _id={value._id} title={value.title} content={value.content}></Note>;\n                                })\n                            }\n                            </div>    \n                        </div>\n                        {\n                            this.renderEditForm()\n                        }\n                    </div>\n                </div>\n            </div >\n        );\n    }\n}\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        notes: state.notes,\n        editStatus: state.editStatus\n    }\n}\nexport default connect(mapStateToProps)(Home);","import React, { Component } from 'react';\rimport './App.css';\rimport HomeTopMenu from './components/HomeTopMenu';\rimport Home from './components/Home';\rimport {connect} from 'react-redux';\rimport axios from 'axios';\r//import mStore from './store';\r\rclass App extends Component {\r  getData = () => {\r    return axios.post('/api/getnotes').then((res) => res.data);\r  }\r  componentWillMount() {\r    this.getData().then((res) => {\r      this.props.getNotes(res);\r    })\r  }\r  render() {\r    return (\r      <div className=\"App\">\r        <HomeTopMenu />\r        <Home />\r      </div>\r    );\r  }\r}\rconst mapDispatchToProps = (dispatch, ownProps) => {\r  return {\r    getNotes: (notes) => {\r      dispatch({type: 'GET_NOTES', notes: notes});\r    }\r  }\r}\rconst mapStateToProps = (state, ownProps) => {\r  return {\r  }\r}\rexport default connect(mapStateToProps ,mapDispatchToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","//xu ly voi server tai day\nconst redux = require('redux');\nconst axios = require('axios');\nvar mInitialState = {\n    editStatus: false,\n    notes: [],\n    editObject: {}\n}\nvar addNew = (note) => {\n    let test = {};\n    axios.post('/api/addnew', {\n        title: note.title,\n        content: note.content\n    }).then((res) => {\n        test = res.data;\n    });\n}\n\nvar updateNote = async (note) => {\n    return axios.put('/api/updatenote', note);\n}\n\nvar deleteNote = async (id) => {\n    return axios.post('/api/deletenote', {\n        _id: id\n    });\n}\n\nconst mReducer = (state = mInitialState, action) => {\n    switch (action.type) {\n        case \"GET_NOTES\":\n            return { ...state, notes: action.notes }\n        case \"ADD_NEW\":\n            addNew(action.newNote);\n            return { ...state, notes: [...state.notes, action.newNote ]};\n        case \"DELETE_NOTE\":\n            deleteNote(action.noteID);\n            let updateNotes = [];\n            state.notes.map((value, key) => {\n                if (value._id !== action.noteID){\n                    return updateNotes.push(value);\n                }\n                return 0;\n            });\n            return {...state, notes: updateNotes};\n        case \"CHANGE_EDIT_STATUS\":\n            return { ...state, editStatus: !state.editStatus }\n        case 'GET_EDIT_OBJECT':\n            return { ...state, editObject: action.editObject }\n        case 'UPDATE_EDIT_OBJECT':\n            updateNote(action.noteEdited);\n            var newNotes = [];\n            state.notes.map((value, key) => {\n                if (value._id === action.noteEdited._id) {\n                    return newNotes.push(action.noteEdited);\n                } else {\n                    return newNotes.push(value);\n                }\n            })\n            return { ...state, editObject: {}, notes: newNotes }\n        default:\n            return state;\n    }\n}\n\nlet mStore = redux.createStore(mReducer);\nmStore.subscribe(() => {\n    console.log(mStore.getState());\n});\nexport default mStore;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport mStore from './store';\n\nReactDOM.render(\n<Provider store={mStore} >\n<App />\n</Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}